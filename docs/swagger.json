{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Aqautrack App",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation for the water tracking web service"
  },
  "servers": [
    {
      "url": "http://localhost:3001"
    },
    {
      "url": "aquatrack-project-backend.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth operations."
    },
    {
      "name": "Water",
      "description": "Water operations."
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a user",
        "operationId": "signupUser",
        "description": "Add a user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email address",
                    "type": "string",
                    "example": "john.doe@example.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully registered a user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "John Doe"
                        },
                        "email": {
                          "type": "string",
                          "example": "john.doe@example.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Email already in use",
            "$ref": "#/components/responses/409"
          },
          "500": {
            "description": "Internal server error",
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login a user",
        "operationId": "signinUser",
        "description": "Login a user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "example@ukr.net"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully logged in",
            "headers": {
              "Set-Cookie": {
                "description": "Cookies with session details",
                "schema": {
                  "type": "string",
                  "example": "refreshToken=...; sessionId=...;"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "User successfully logged in"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "description": "Access token for the user",
                          "type": "string",
                          "example": "base64encodedaccesstoken"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/current": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get current user",
        "operationId": "getUser",
        "description": "Get current user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Bearer token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "User with id=66b1a978bc45baca96b81b0b found success"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/update/{userId}": {
      "patch": {
        "tags": [
          "Auth"
        ],
        "summary": "Patch user",
        "operationId": "upsertUser",
        "description": "Patch user by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/from-data": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "name": {
                    "description": "User's name",
                    "type": "string",
                    "example": "John Doe",
                    "default": "User"
                  },
                  "weight": {
                    "description": "User's weight in kilograms",
                    "type": "number",
                    "example": 65
                  },
                  "timeSports": {
                    "description": "How much the user does sports",
                    "type": "number",
                    "example": 4
                  },
                  "waterRate": {
                    "description": "How much user drinks water",
                    "type": "number",
                    "example": 2
                  },
                  "gender": {
                    "description": "User's gender",
                    "type": "string",
                    "enum": [
                      "woman",
                      "man"
                    ],
                    "default": "man"
                  },
                  "avatar": {
                    "description": "User's photo",
                    "type": "string",
                    "example": "<https://res.cloudinary.com/fvnje/image/upload/image.png>"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update user by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Sucsessfuly update a contact"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "logout user",
        "operationId": "logout",
        "description": "Abort current user session",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "sessionId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "refresh user session",
        "operationId": "refreshUser",
        "description": "returns new session",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "sessionId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66b1c86565aac586019376ea"
            }
          },
          {
            "in": "cookie",
            "name": "refreshToken",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2e6nsfsrJOpdDlXtsCYThLxnHm8TtU0Cc+K/kPEG"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "User signed in successfully"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "description": "new accessToken",
                          "type": "string",
                          "example": "wWfrg/qp7c/CqF6+9KZt2LgZXab/Gw9Z7yCTV/vW"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/users": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get the number of users",
        "operationId": "getUserCount",
        "description": "Retrieve the total number of users",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the number of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully retrieved the number of users"
                    },
                    "data": {
                      "type": "integer",
                      "example": 10
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/request-reset-email": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Request password reset email",
        "operationId": "requestResetEmail",
        "description": "Send a password reset email to the user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/requestResetEmail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Reset password email was successfully sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Reset password email was successfully sent"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Reset user password",
        "operationId": "resetPassword",
        "description": "Reset the user's password using a token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/resetPassword"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Password was successfully reset",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Password was successfully reset"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/confirm-google-auth": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Confirm Google authentication",
        "operationId": "confirmGoogleAuth",
        "description": "Authenticate user via Google OAuth2",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userGoogleAuthCode"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User authenticated successfully via Google",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "User authenticated successfully via Google"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "description": "New access token",
                          "type": "string",
                          "example": "wWfrg/qp7c/CqF6+9KZt2LgZXab/Gw9Z7yCTV/vW"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/get-oauth-url": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get Google OAuth URL",
        "operationId": "getGoogleOAuthUrl",
        "description": "Retrieve the Google OAuth URL for user authentication",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the Google OAuth URL",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Google OAuth URL generated successfully"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "url"
                      ],
                      "properties": {
                        "url": {
                          "type": "string",
                          "example": "https://accounts.google.com/o/oauth2/auth?client_id=YOUR_CLIENT_ID&redirect_uri=YOUR_REDIRECT_URI&response_type=code"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water": {
      "post": {
        "tags": [
          "Water"
        ],
        "summary": "Create a new water record",
        "operationId": "createNewWater",
        "description": "Create a new water record for a user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/water"
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/waterResponse"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/water/{waterId}": {
      "put": {
        "tags": [
          "Water"
        ],
        "summary": "Update an existing water record",
        "operationId": "updateWater",
        "description": "Update an existing water record for a user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "waterId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the water record to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/waterUpdate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/waterResponse"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/water404"
          }
        }
      },
      "delete": {
        "tags": [
          "Water"
        ],
        "summary": "Delete a water record",
        "operationId": "deleteWater",
        "description": "Delete a water record for a user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "waterId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the water record to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/water404"
          }
        }
      }
    },
    "/water/perDay": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get water data per day",
        "operationId": "getWaterPerDay",
        "description": "Retrieve water data for a specific day",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "day",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2024-08-13"
            },
            "description": "The date in YYYY-MM-DD format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "successWithData": {
                    "$ref": "#/components/examples/waterResponseDayWithData"
                  },
                  "noData": {
                    "$ref": "#/components/examples/waterResponseDayNoData"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/perMonth": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get water records for a specific month",
        "operationId": "getWaterPerMonth",
        "description": "Get water records for a specific month with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "month",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2023-08"
            },
            "description": "The month for which to retrieve water records"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "successWithData": {
                    "$ref": "#/components/examples/waterResponseWithData"
                  },
                  "noData": {
                    "$ref": "#/components/examples/waterResponseNoData"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Session not found"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "User with this email not found'"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User with this email not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Conflict error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "This email already in use"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "This email already in use"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Internal server error"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "waterResponse": {
        "description": "Successfully processed water data",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Success find water per day"
                },
                "data": {
                  "$ref": "#/components/schemas/water"
                },
                "totalWaterVolume": {
                  "type": "number",
                  "example": 2000
                }
              }
            }
          }
        }
      },
      "water404": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Record not found"
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "email",
          "password",
          "weight",
          "timeSports",
          "waterRate",
          "gender",
          "avatar"
        ],
        "properties": {
          "_id": {
            "description": "User's id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "name": {
            "description": "User's name",
            "type": "string",
            "example": "John Doe",
            "default": "User"
          },
          "password": {
            "description": "Hashed user's password",
            "type": "string",
            "example": "$2b$10$v.fenpNLVl2nfbHGoU504edTH6dsljkjhSk7BrtE7mdbrBeWZdP0W"
          },
          "weight": {
            "description": "User's weight in kilograms",
            "type": "number",
            "example": 65
          },
          "timeSports": {
            "description": "How much the user does sports",
            "type": "number",
            "example": 4
          },
          "waterRate": {
            "description": "User's goal to drink water",
            "type": "number",
            "example": 2
          },
          "gender": {
            "description": "User's gender",
            "type": "string",
            "enum": [
              "woman",
              "man"
            ],
            "default": "man"
          },
          "avatar": {
            "description": "User's photo",
            "type": "string",
            "example": "<https://res.cloudinary.com/fvnje/image/upload/image.png>"
          }
        }
      },
      "requestResetEmail": {
        "type": "object",
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.doe@example.com"
          }
        }
      },
      "resetPassword": {
        "type": "object",
        "required": [
          "token",
          "newPassword"
        ],
        "properties": {
          "token": {
            "type": "string",
            "example": "5a3c67e7ae7f10c88b598384"
          },
          "newPassword": {
            "type": "string",
            "example": "NewSecurePassword123"
          }
        }
      },
      "userGoogleAuthCode": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "type": "string",
            "example": "4/0AdQt8qgIH8F2l9d7-MT7-IeM2AVyTZySwV7Zdc8s_cudhb8Pdr-U_YiDgkj"
          }
        }
      },
      "water": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "example": "2023-08-10"
          },
          "waterVolume": {
            "type": "number",
            "example": 500
          },
          "userId": {
            "type": "string",
            "example": "60d21b4667d0d8992e610c85"
          }
        }
      },
      "waterUpdate": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "example": "2023-08-10"
          },
          "waterVolume": {
            "type": "number",
            "example": 750
          }
        }
      }
    },
    "examples": {
      "waterResponseDayWithData": {
        "value": {
          "status": 200,
          "message": "Success find water per day",
          "data": [
            {
              "time": "08:00",
              "waterVolume": 500
            },
            {
              "time": "12:00",
              "waterVolume": 700
            }
          ]
        }
      },
      "waterResponseDayNoData": {
        "value": {
          "status": 200,
          "message": "No data found for the given day",
          "data": []
        }
      },
      "waterResponseWithData": {
        "value": {
          "status": 200,
          "message": "Success find water per month",
          "data": [
            {
              "day": "2024-08-01",
              "totalWaterVolume": 2000
            },
            {
              "day": "2024-08-02",
              "totalWaterVolume": 1800
            }
          ]
        }
      },
      "waterResponseNoData": {
        "value": {
          "status": 200,
          "message": "No data found for the given month",
          "data": []
        }
      }
    }
  }
}